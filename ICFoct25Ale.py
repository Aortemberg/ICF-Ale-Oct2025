import streamlit as st
import pandas as pd
import openpyxl
from docx import Document
from docx.shared import Pt, RGBColor
from datetime import datetime
import io
import zipfile
import re

# -----------------------------
# Configuraci√≥n de la aplicaci√≥n Streamlit
# -----------------------------
st.set_page_config(page_title="Generador DOCX Consentimientos", layout="wide")

st.title("ü©∫ Generador autom√°tico de Consentimientos (Excel ‚Üí Word)")

st.markdown("""
Sub√≠ tu **modelo.docx** (plantilla con placeholders `<<...>>`) y el **datos.xlsx** con la informaci√≥n de cada investigador.  
El sistema generar√° los documentos personalizados respetando solo las filas visibles del Excel.
""")

# Cargadores de archivos
uploaded_docx = st.file_uploader("üìÑ Sub√≠ el documento modelo (.docx)", type=["docx"])
uploaded_xlsx = st.file_uploader("üìä Sub√≠ el Excel (.xlsx)", type=["xlsx"])

# Textos para reemplazo condicional
texto_anticonceptivo_original = (
    "El m√©dico del estudio discutir√° con usted qu√© m√©todo anticonceptivo se considera adecuado. "
    "El patrocinador y/o el investigador del estudio garantizar√°n su acceso al m√©todo anticonceptivo "
    "acordado y necesario para su participaci√≥n en este estudio"
)
texto_ba_reemplazo = (
    "El m√©dico del estudio discutir√° con usted qu√© m√©todos anticonceptivos se consideran adecuados. "
    "El Patrocinador y/o el m√©dico del estudio garantizar√° su acceso a este m√©todo anticonceptivo "
    "acordado y necesario para su participaci√≥n en el ensayo. El costo de los m√©todos anticonceptivos "
    "seleccionados correr√° a cargo del Patrocinador."
)

# -----------------------------
# Funciones auxiliares
# -----------------------------
def remove_paragraph(paragraph):
    p = paragraph._element
    p.getparent().remove(p)

def replace_text_in_runs(paragraph, old, new):
    for run in paragraph.runs:
        if old in run.text:
            run.text = run.text.replace(old, new)

def replace_text_in_doc(doc, replacements):
    def process_paragraphs(paragraphs):
        for p in paragraphs:
            for old, new in replacements.items():
                replace_text_in_runs(p, old, new)
